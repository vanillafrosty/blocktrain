{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ai.js","webpack:///./src/app.js","webpack:///./src/board.js","webpack:///./src/game.js","webpack:///./src/lru/cache.js","webpack:///./src/lru/linkedList.js","webpack:///./src/pieces.js","webpack:///./src/shadowBoard.js","webpack:///./src/util.js"],"names":["boardUtil","AIGame","board","populationSize","genomes","genomeIndex","movesTaken","movesLimit","createInitialPopulation","timeStep","score","genome","i","id","Math","random","rowsCleared","weightedHeight","cumulativeHeight","relativeHeight","holes","roughness","push","evaluateNextGenome","length","evolve","makeNextMove","fitness","bestFutureMove","bestCurrentMove","possibleMoves","getPossibleMoves","currentPiece","shadowBoard","ShadowBoard","deepDup","grid","shadowMove","getHighestRatedMove","nextPiece","rating","updateScore","realMove","boardStep","move","drop","rotations","piece","origOffset","x","offset","y","rotationsHsh","type","handleRotate","trans","gameOver","validPos","matrix","minDelta","deltaY","rows","setPiece","fullRows","checkGameOver","algorithm","pow","getMaxHeight","getCumulativeHeight","getRelativeHeight","getHoles","getRoughness","removePiece","translation","r","multiRotate","shadowOffset","handleDrop","moves","highestMove","playingGame","megamanAudio","play","megamanPlaying","gameOverOnce","gameStart","document","getElementById","setAttribute","render","timestamp","resetTime","startTime","update","totalRotations","pieces","newPiece","emptyBoard","animationFrame","requestAnimationFrame","drawPiece","drawNext","console","log","Game","addEventListener","canvas","width","height","nextPieceCanvas","ctx","getContext","nextPieceCtx","Board","game","event","key","toggleAudio","restart","tracks","tracksIndex","src","cols","strokeStyle","outlineStrokeStyle","square_width","Array","colors","bind","j","undefined","clearRect","color","drawSquare","dupOffset","maxY","drawSquareOutline","drawNextSquare","s_w","fillStyle","lineWidth","fillRect","strokeRect","beginPath","moveTo","lineTo","stroke","clearRows","numRows","startY","fullRow","removeRow","row_idx","row","between","newOffset","reRotate","handleResponse","rightOrLeft","response","handledX","handledY","handleX","handleY","handleP","peaksRemaining","maxPeak","peaks","p","minPeak","abs","Pieces","foreverTime","pause","temp","transposed","transpose","floor","rotate","rotateCounter","e","preventDefault","notGameOver","cancelAnimationFrame","validateRotate","handleUnrotate","addKeyListeners","LRUCache","maxCount","pieceValues","count","max","map","list","LinkedList","node","remove","newNode","add","val","oldestNode","oldest","Node","next","last","head","tail","bag","lru","randomIndex","current","shuffle","get","middle","num","low","high","dy","arr","duped","col"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","import Game from './game';\nimport * as boardUtil from './util';\nimport ShadowBoard from './shadowBoard';\n\nexport default class AIGame extends Game {\n\n  constructor(board) {\n    super(board);\n    this.populationSize = 50;\n    this.genomes = [];\n    this.genomeIndex = -1;\n    this.movesTaken = 0;\n    this.movesLimit = 500;\n    this.createInitialPopulation();\n    this.timeStep = 300;\n    this.score = 0;\n  }\n\n\n  createInitialPopulation() {\n    let genome;\n    for (let i=0; i<this.populationSize; i++) {\n      genome = {\n   \t\t\tid: Math.random(),\n   \t\t\trowsCleared: Math.random() - 0.5,\n   \t\t\tweightedHeight: Math.random() - 0.5,\n   \t\t\tcumulativeHeight: Math.random() - 0.5,\n   \t\t\trelativeHeight: Math.random() - 0.5,\n   \t\t\tholes: Math.random() * 0.5,\n   \t\t\troughness: Math.random() - 0.5,\n      }\n      this.genomes.push(genome);\n    }\n    this.evaluateNextGenome();\n  }\n\n  evaluateNextGenome() {\n    this.score = 0;\n    this.genomeIndex += 1;\n    if (this.genomeIndex >= this.genomes.length) {\n      this.evolve();\n    }\n    this.movesTaken = 0;\n    this.makeNextMove();\n  }\n\n  makeNextMove() {\n    this.movesTaken += 1;\n    if (this.movesTaken > this.movesLimit) {\n      //evaluate the score for the current genome, and move to the next genome\n      this.genomes[this.genomeIndex].fitness = this.score;\n      this.evaluateNextGenome();\n    } else {\n      let bestFutureMove, bestCurrentMove;\n      //possible moves with this.currentPiece\n      let possibleMoves = this.getPossibleMoves(this.board, this.currentPiece);\n      for (let i=0; i<possibleMoves.length; i++) {\n        this.shadowBoard = new ShadowBoard(boardUtil.deepDup(this.board.grid));\n        this.shadowMove(possibleMoves[i], this.currentPiece);\n        bestFutureMove = this.getHighestRatedMove(this.getPossibleMoves(this.shadowBoard, this.nextPiece));\n        possibleMoves[i].rating += bestFutureMove.rating;\n      }\n      bestCurrentMove = this.getHighestRatedMove(possibleMoves);\n      //based on the bestCurrentMove, move this.currentPiece and set it on this.board\n      this.updateScore(bestCurrentMove);\n      this.realMove(bestCurrentMove, this.currentPiece);\n      //draw stuff because we just made the best move\n      this.boardStep();\n    }\n  }\n\n  updateScore(move) {\n    this.score += move.drop;\n    switch(move.rotations) {\n      case 1:\n        this.score += 400;\n        return true;\n      case 2:\n        this.score += 1000;\n        return true;\n      case 3:\n        this.score += 3000;\n        return true;\n      case 4:\n        this.score += 12000;\n        return true;\n    }\n  }\n\n  getPossibleMoves(board, piece) {\n    let origOffset = {\n      x: this.offset.x,\n      y: this.offset.y\n    };\n    let possibleMoves = [];\n    let rotationsHsh = {\n      'T': 4,\n      'O': 1,\n      'J': 4,\n      'L': 4,\n      'Z': 2,\n      'S': 2,\n      'I': 2\n    }\n    let rotations = rotationsHsh[piece.type];\n    for (let i=1; i<=rotations; i++) {\n      //since handleRotate is destructive, just keep rotating once.\n      //call multiRotate some other time.\n      piece = this.handleRotate(piece);\n      for (let trans=-5; trans<=5; trans++) {\n        let gameOver = false;\n        this.offset.x = origOffset.x;\n        this.offset.y = origOffset.y;\n        this.offset.x += trans;\n        if (board.validPos(piece.matrix, this.offset)) {\n          let minDelta = boardUtil.deltaY(piece, this.offset, board.rows, board);\n          this.offset.y += minDelta;\n          board.setPiece(piece, this.offset.x, this.offset.y-1);\n          let rowsCleared = board.fullRows(piece.length, this.offset.y-1);\n          if (rowsCleared === 0) {\n            gameOver = board.checkGameOver(this.nextPiece.matrix, origOffset);\n          }\n          let algorithm = {\n  \t\t\t\t\trowsCleared: rowsCleared,\n  \t\t\t\t\tweightedHeight: Math.pow(board.getMaxHeight(), 1.5),\n  \t\t\t\t\tcumulativeHeight: board.getCumulativeHeight(rowsCleared),\n  \t\t\t\t\trelativeHeight: board.getRelativeHeight(),\n  \t\t\t\t\tholes: board.getHoles(),\n  \t\t\t\t\troughness: board.getRoughness()\n          };\n   \t\t\t\tlet rating = 0;\n   \t\t\t\trating += algorithm.rowsCleared * this.genomes[this.genomeIndex].rowsCleared;\n   \t\t\t\trating += algorithm.weightedHeight * this.genomes[this.genomeIndex].weightedHeight;\n   \t\t\t\trating += algorithm.cumulativeHeight * this.genomes[this.genomeIndex].cumulativeHeight;\n   \t\t\t\trating += algorithm.relativeHeight * this.genomes[this.genomeIndex].relativeHeight;\n   \t\t\t\trating += algorithm.holes * this.genomes[this.genomeIndex].holes;\n   \t\t\t\trating += algorithm.roughness * this.genomes[this.genomeIndex].roughness;\n   \t\t\t\t//if the move loses the game, slam its rating\n   \t\t\t\tif (gameOver) {\n   \t\t\t\t\trating -= 500;\n   \t\t\t\t}\n          board.removePiece(piece, this.offset.x, this.offset.y-1);\n   \t\t\t\t//push all possible moves, with their associated ratings and parameter values to an array\n   \t\t\t\tpossibleMoves.push({rotations: i, translation: trans, rating: rating, algorithm: algorithm, drop: minDelta-1});\n        }\n      }\n    }\n    this.offset = origOffset;\n    return possibleMoves;\n  }\n\n  multiRotate(piece, rotations) {\n    for (let r=0; r<rotations; r++) {\n      piece = this.handleRotate(piece);\n    }\n    return piece;\n  }\n\n  shadowMove(move, piece) {\n    piece = this.multiRotate(piece, move.rotations);\n    let shadowOffset = {\n      x: this.offset.x,\n      y: this.offset.y\n    }\n    shadowOffset.x += move.translation;\n    this.shadowBoard.handleDrop(piece, shadowOffset);\n  }\n\n  realMove(move, piece) {\n    piece = this.multiRotate(piece, move.rotations);\n    this.offset.x += move.translation;\n    this.board.setPiece(piece, this.offset.x, this.offset.y);\n  }\n\n  getHighestRatedMove(moves) {\n    let highestMove = moves[0];\n    for (let i=1; i<moves.length; i++) {\n      if (moves[i].rating > highestMove.rating) {\n        highestMove = moves[i];\n      }\n    }\n    return highestMove;\n  }\n\n  play() {\n    if (this.playingGame || this.gameOver) {\n      return true;\n    } else {\n      this.playingGame = true;\n      this.megamanAudio.play();\n      this.megamanPlaying = true;\n\n\n      if (!this.gameOverOnce) {\n        let gameStart = document.getElementById('before-game-start');\n        gameStart.setAttribute(\"id\", \"game-start\");\n      }\n\n      const render = (timestamp) => {\n        this.resetTime += timestamp-this.startTime;\n\n        if (this.resetTime > this.timeStep) {\n          this.resetTime = 0;\n          this.offset.y += 1;\n          if (this.board.update(this.currentPiece.matrix, this.offset)){\n            this.offset.y = 0;\n            this.offset.x = 4;\n            this.totalRotations = 0;\n            this.currentPiece = this.nextPiece;\n            this.nextPiece = this.pieces.newPiece();\n            this.makeNextMove();\n          }\n          this.boardStep();\n          this.gameOver = this.board.checkGameOver(this.currentPiece.matrix, this.offset);\n          if (this.gameOver) {\n            this.genomeIndex += 1;\n            this.genomes[this.genomeIndex].fitness = this.score;\n            this.score = 0;\n            this.currentPiece = this.nextPiece;\n            this.nextPiece = this.pieces.newPiece();\n            this.evaluateNextGenome();\n            this.board.emptyBoard();\n          }\n        }\n        this.startTime = timestamp;\n        this.animationFrame = requestAnimationFrame(render);\n      }\n\n      this.animationFrame = requestAnimationFrame((timestamp) => {\n        this.startTime = timestamp;\n        this.board.drawPiece(this.currentPiece.matrix, this.offset);\n        this.board.drawNext(this.nextPiece.matrix);\n        render(timestamp);\n      });\n    }\n  }\n\n  evolve() {\n    console.log(\"evolving!\");\n  }\n\n\n}\n","import Game from './game';\nimport Board from './board';\nimport AIGame from './ai';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById(\"canvas\");\n  canvas.width = 300;\n  canvas.height = 630;\n  const nextPieceCanvas = document.getElementById(\"next-piece-canvas\");\n  nextPieceCanvas.width = 120;\n  nextPieceCanvas.height = 150;\n\n  let ctx = canvas.getContext('2d');\n  let nextPieceCtx = nextPieceCanvas.getContext('2d');\n\n  let board = new Board(canvas.width, canvas.height, ctx, nextPieceCtx);\n  // let game = new AIGame(board);\n  let game;\n\n  document.addEventListener(\"keypress\", (event) => {\n    if (event.key === 'm'){\n      game.toggleAudio();\n    } else if (event.key === 'r') {\n      if (game.gameOver) {\n        game.restart();\n      }\n    }\n  });\n\n\n  const tracks = [\n    \"./music/metal-man.mp3\",\n    \"./music/crash-man.mp3\",\n    \"./music/dr-wily.mp3\"\n  ];\n  let tracksIndex = 0;\n  const megamanAudio = document.getElementById(\"megaman-theme\");\n  megamanAudio.addEventListener(\"ended\", () => {\n    tracksIndex = (tracksIndex+1) % tracks.length;\n    megamanAudio.src = tracks[tracksIndex];\n    megamanAudio.play();\n  });\n\n  document.addEventListener(\"keypress\", (event) => {\n    if (event.key === 'p'){\n      if (!game) {\n        game = new Game(board);\n      }\n      game.play();\n    } else if (event.key === 'a') {\n      if (!game) {\n        game = new AIGame(board);\n      }\n      game.play();\n    }\n  });\n\n\n\n});\n","import * as boardUtil from './util';\n\nexport default class Board {\n\n  constructor(width, height, ctx, nextPieceCtx) {\n    this.ctx = ctx;\n    this.nextPieceCtx = nextPieceCtx;\n    this.width = width;\n    this.height = height;\n    this.rows = 21;\n    this.cols = 10;\n    this.grid = [];\n    this.strokeStyle = '#000000';\n    this.outlineStrokeStyle = '#F9F9F9';\n    this.square_width = width/this.cols;\n    for (let i=0; i<this.rows; i++) {\n      this.grid[i] = new Array(this.cols);\n    }\n    this.colors = {\n      1: '#E24242',\n      2: '#F5DC41',\n      3: '#CC41F5',\n      4: '#3E4AE8',\n      5: '#3EE0E8',\n      6: '#3EE848',\n      7: '#F14D17'\n    };\n    this.emptyBoard = this.emptyBoard.bind(this);\n  }\n\n  emptyBoard() {\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        this.grid[i][j] = undefined;\n      }\n    }\n  }\n\n  render() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (typeof(this.grid[i][j]) !== 'undefined') {\n          let x = j*this.square_width;\n          let y = i*this.square_width;\n          let color = this.colors[this.grid[i][j]];\n          this.drawSquare(x,y, color);\n        }\n      }\n    }\n  }\n\n  drawPiece(piece, offset) {\n    let minDelta;\n    let dupOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    minDelta = boardUtil.deltaY(piece, offset, this.rows, this.grid);\n    dupOffset.y += minDelta-1;\n    let x, y, maxY, color;\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          x = (offset.x+j)*this.square_width;\n          y = (offset.y+i)*this.square_width;\n          maxY = (dupOffset.y+i)*this.square_width;\n          color = this.colors[piece[i][j]];\n          this.drawSquare(x, y, color);\n          this.drawSquareOutline(x, maxY, color);\n        }\n      }\n    }\n  }\n\n\n  drawNext(piece) {\n    const offset = {\n      x: 0,\n      y: 1\n    };\n    //hard code width and height for now\n    this.nextPieceCtx.clearRect(0, 0, 120, 150);\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = (offset.x+j)*this.square_width;\n          let y = (offset.y+i)*this.square_width;\n          let color = this.colors[piece[i][j]];\n          this.drawNextSquare(x, y, color);\n        }\n      }\n    }\n  }\n\n  drawNextSquare(x, y, color){\n    const s_w = this.square_width;\n    this.nextPieceCtx.fillStyle = color;\n    this.nextPieceCtx.strokeStyle = this.strokeStyle;\n    this.nextPieceCtx.lineWidth = 2;\n    this.nextPieceCtx.fillRect(x, y, s_w, s_w);\n    this.nextPieceCtx.strokeRect(x, y, s_w, s_w);\n    this.nextPieceCtx.beginPath();\n    this.nextPieceCtx.moveTo(x+s_w/4, y+s_w*(3/4));\n    this.nextPieceCtx.lineTo(x+s_w/4, y+s_w/4);\n    this.nextPieceCtx.lineTo(x+s_w*(3/4), y+s_w/4);\n    this.nextPieceCtx.stroke();\n  }\n\n  drawSquare(x, y, color)  {\n    const s_w = this.square_width;\n    this.ctx.fillStyle = color;\n    this.ctx.strokeStyle = this.strokeStyle;\n    this.ctx.lineWidth = 2;\n    this.ctx.fillRect(x, y, s_w, s_w);\n    this.ctx.strokeRect(x, y, s_w, s_w);\n    this.ctx.beginPath();\n    this.ctx.moveTo(x+s_w/4, y+s_w*(3/4));\n    this.ctx.lineTo(x+s_w/4, y+s_w/4);\n    this.ctx.lineTo(x+s_w*(3/4), y+s_w/4);\n    this.ctx.stroke();\n  }\n\n  drawSquareOutline(x, y, color) {\n    const s_w = this.square_width;\n    this.ctx.strokeStyle = this.outlineStrokeStyle;\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(x, y, s_w, s_w);\n  }\n\n  update(piece, offset) {\n    if (offset.y < 0) {\n      return false;\n    }\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          if (y >= this.rows || typeof(this.grid[y][x]) !== 'undefined') {\n            this.setPiece(piece, offset.x, offset.y-1);\n            this.clearRows(piece.length, offset.y-1);\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  clearRows(numRows, startY){\n    for (let i=0; i<numRows; i++) {\n      if (this.fullRow(startY+i)) {\n        this.removeRow(startY+i);\n      }\n    }\n  }\n\n\n\n  fullRow(row_idx){\n    let row = this.grid[row_idx];\n    if (row === undefined) {\n      return false;\n    }\n    for (let i=0; i<row.length; i++) {\n      if (typeof(row[i]) === 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  removeRow(row_idx) {\n    let row = this.grid[row_idx];\n    for (let i=row_idx-1; i>=0; i--) {\n      for (let j=0; j<row.length; j++){\n        this.grid[i+1][j] = this.grid[i][j];\n      }\n    }\n    for (let j=0; j<row.length; j++){\n      this.grid[0][j] = undefined;\n    }\n  }\n\n  //updates the grid with the piece values\n  setPiece(piece, x, y) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          this.grid[y+i][x+j] = piece[i][j];\n        }\n      }\n    }\n  }\n\n  validPos(piece, offset) {\n    debugger;\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          if (!boardUtil.between(x, 0, this.cols-1) || !boardUtil.between(y, 0, this.rows-1)) {\n            return false;\n          }\n          if (typeof(this.grid[y][x]) !== 'undefined') {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  //helper method for validateRotate\n  handleResponse(piece, offset, newOffset) {\n    if (this.validPos(piece, newOffset)) {\n      return {\n        reRotate: false,\n        offset: newOffset\n      };\n    } else {\n      return {\n        reRotate: true,\n        offset: offset\n      };\n    }\n  }\n\n  //helper method for validateRotate\n  handleX(x, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.between(x, 0, this.cols-1)) {\n      return null;\n    }\n    else if (x < 0) {\n      newOffset.x += 1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n    else if (x > (this.cols-1)) {\n      //reminder: may want to subtract Math.floor(piece.length/2)\n      //to account for the line pieces hugging the right side of the board\n      newOffset.x -=1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n  }\n\n  handleY(y, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.between(y, 0, this.rows-1)) {\n      return null;\n    }\n    else if (y < 0) {\n      newOffset.y += 1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n    else if (y > (this.rows-1)) {\n      newOffset.y -=1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n  }\n\n  handleP(x, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.rightOrLeft(piece, x) === 'left') {\n      newOffset.x += 1;\n      //try moving the piece up one before giving up\n      let response = this.handleResponse(piece, offset, newOffset);\n      if (response.reRotate){\n        newOffset.x -= 1;\n        newOffset.y -= 1;\n        return this.handleResponse(piece, offset, newOffset);\n      }\n      return response;\n    } else if (boardUtil.rightOrLeft(piece, x) === 'right'){\n      newOffset.x -=1;\n      let response = this.handleResponse(piece, offset, newOffset);\n      if (response.reRotate) {\n        newOffset.x += 1;\n        newOffset.y -= 1;\n        return this.handleResponse(piece, offset, newOffset);\n      }\n      return response;\n    }\n\n  }\n\n  validateRotate(piece, offset) {\n    let handledX, handledY;\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          handledX = this.handleX(x, piece, offset);\n          if (handledX) {\n            return handledX;\n          }\n          handledY = this.handleY(y, piece, offset);\n          if (handledY) {\n            return handledY;\n          }\n          if (typeof(this.grid[y][x]) !== 'undefined') {\n            return this.handleP(x, piece, offset);\n\n          }\n        }\n      }\n    }\n    return {\n      reRotate: false,\n      offset: offset\n    }\n  }\n\n  handleDrop(piece, offset) {\n    let minDelta;\n    minDelta = boardUtil.deltaY(piece, offset, this.rows, this.grid);\n    offset.y += minDelta;\n    this.setPiece(piece, offset.x, offset.y-1);\n    this.clearRows(piece.length, offset.y-1);\n  }\n\n  checkGameOver(piece, offset) {\n    if (offset.y !== 0) { return false; }\n    if (!this.validPos(piece, offset)) {\n      return true;\n    }\n    return false;\n  }\n\n  /*\n   █████  ██     ███    ███ ███████ ████████ ██   ██  ██████  ██████  ███████\n  ██   ██ ██     ████  ████ ██         ██    ██   ██ ██    ██ ██   ██ ██\n  ███████ ██     ██ ████ ██ █████      ██    ███████ ██    ██ ██   ██ ███████\n  ██   ██ ██     ██  ██  ██ ██         ██    ██   ██ ██    ██ ██   ██      ██\n  ██   ██ ██     ██      ██ ███████    ██    ██   ██  ██████  ██████  ███████\n  */\n\n\n\n  fullRows(numRows, startY){\n    for (let i=0; i<numRows; i++) {\n      if (this.fullRow(startY+i)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getMaxHeight() {\n    let peaksRemaining = 10;\n    let maxPeak = 0;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] === undefined) {\n          peaksRemaining -= 1;\n          if ((this.rows - i) > maxPeak) {\n            maxPeak = this.rows-i;\n          }\n        }\n      }\n    }\n    return maxPeak;\n  }\n\n  getCumulativeHeight(fullRows) {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] === undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    let cumulativeHeight = 0;\n    for (let p=0; p<peaks.length; p++) {\n      cumulativeHeight += peaks[p];\n    }\n    //do the below because remember we're not actually clearing rows,\n    //just keeping track of how many rows are filled\n    return cumulativeHeight - (fullRows*10);\n  }\n\n  getRelativeHeight() {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    let minPeak = 99;\n    let maxPeak = 0;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] === undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n          if (peaks[j] > maxPeak) {\n            maxPeak = peaks[j];\n          }\n          if (peaks[j] < minPeak) {\n            minPeak = peaks[j];\n          }\n        }\n      }\n    }\n    return maxPeak - minPeak;\n  }\n\n  getHoles() {\n    let holes = 0;\n    for (let i=1; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (this.grid[i][j] === undefined && this.grid[i-1][j]) {\n          holes += 1;\n        }\n      }\n    }\n    return holes;\n  }\n\n  //roughness is the sum of relative height differences between columns\n  getRoughness() {\n    let roughness = 0;\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] === undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    for (let p=0; p<peaks.length-1; p++) {\n      roughness += Math.abs(peaks[p] - peaks[p+1]);\n    }\n    return roughness;\n  }\n\n  removePiece(piece, x, y) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          this.grid[y+i][x+j] = undefined;\n        }\n      }\n    }\n  }\n\n\n}\n","import Pieces from './pieces';\n\nexport default class Game {\n\n  constructor(board) {\n    this.gameOverOnce = false; //to make sure we don't add multiple event listeners\n    this.animationFrame = null;\n    this.board = board;\n    this.offset = {\n      x: 4,\n      y: 0\n    };\n    this.totalRotations = 0;\n    this.pieces = new Pieces();\n    this.currentPiece = this.pieces.newPiece();\n    this.nextPiece = this.pieces.newPiece();\n    this.startTime;\n    this.resetTime = 0;\n    this.foreverTime = 0;\n    this.timeStep = 1000;\n    this.megamanPlaying = false;\n    this.playingGame = false;\n    this.gameOver = false;\n    this.megamanAudio = document.getElementById(\"megaman-theme\");\n  }\n\n  toggleAudio(){\n    if (this.playingGame || this.gameOver) {\n      if (this.megamanPlaying){\n        this.megamanAudio.pause();\n        this.megamanPlaying = false;\n      } else {\n        this.megamanAudio.play();\n        this.megamanPlaying = true;\n      }\n    }\n  }\n\n  //transpose a square matrix with space considerations\n  transpose(matrix) {\n    let temp;\n    for (let i=0; i<matrix.length; i++){\n      for (let j=i+1; j<matrix.length; j++){\n        temp = matrix[i][j];\n        matrix[i][j] = matrix[j][i];\n        matrix[j][i] = temp;\n      }\n    }\n    return matrix;\n  }\n\n  //we are prioritizing space over time complexity here. creating a new\n  //matrix should give us faster time complexity, but both ways are still O(n^2)\n  rotate(matrix) {\n    let temp;\n    let transposed = this.transpose(matrix);\n    //reverse the columns\n    for (let i=0; i<matrix.length; i++) {\n      for (let j=0; j<Math.floor(matrix.length/2); j++){\n        temp = matrix[i][j];\n        matrix[i][j] = matrix[i][matrix.length-1-j];\n        matrix[i][matrix.length-1-j] = temp;\n      }\n    }\n    return matrix;\n  }\n\n  rotateCounter(matrix) {\n    let temp;\n    let transposed = this.transpose(matrix);\n    //reverse the rows\n    for (let i=0; i<Math.floor(matrix.length/2); i++) {\n      for (let j=0; j<matrix.length; j++){\n        temp = matrix[i][j];\n        matrix[i][j] = matrix[matrix.length-1-i][j];\n        matrix[matrix.length-1-i][j] = temp;\n      }\n    }\n    return matrix;\n  }\n\n  handleRotate(piece) {\n    switch(piece.type) {\n      case 'T':\n      case 'O':\n      case 'J':\n      case 'L':\n        piece.matrix = this.rotate(piece.matrix);\n        return piece;\n      case 'Z':\n      case 'S':\n      case 'I':\n        this.totalRotations += 1;\n        if (this.totalRotations % 2 !== 0) {\n          piece.matrix = this.rotate(piece.matrix);\n        } else {\n          piece.matrix = this.rotateCounter(piece.matrix);\n        }\n        return piece;\n    }\n  }\n\n  handleUnrotate(piece) {\n    switch(piece.type) {\n      case 'T':\n      case 'O':\n      case 'J':\n      case 'L':\n        piece.matrix = this.rotateCounter(piece.matrix);\n        return piece;\n      case 'Z':\n      case 'S':\n      case 'I':\n        //since we're unrotating, at a high level of thinking we\n        //shouldn't actually count another rotation.\n        // this.totalRotations += 1;\n        if (this.totalRotations % 2 !== 0) {\n          piece.matrix = this.rotateCounter(piece.matrix);\n        } else {\n          piece.matrix = this.rotate(piece.matrix);\n        }\n        return piece;\n    }\n  }\n\n  boardStep() {\n    this.board.render();\n    this.board.drawPiece(this.currentPiece.matrix, this.offset);\n    this.board.drawNext(this.nextPiece.matrix);\n  }\n\n  addKeyListeners() {\n    document.addEventListener('keydown', (e) => {\n      switch(e.key) {\n        case 'd':\n        case 'ArrowRight':\n          if (!this.gameOver) {\n            this.offset.x += 1;\n            if (this.board.validPos(this.currentPiece.matrix, this.offset)) {\n              this.boardStep();\n            } else {\n              this.offset.x -= 1;\n            }\n          }\n          break;\n        case 'a':\n        case 'ArrowLeft':\n          if (!this.gameOver) {\n            this.offset.x -= 1;\n            if (this.board.validPos(this.currentPiece.matrix, this.offset)){\n              this.boardStep();\n            } else {\n              this.offset.x += 1;\n            }\n          }\n          break;\n        case 's':\n        case 'ArrowDown':\n          e.preventDefault();\n          if (!this.gameOver){\n            this.offset.y += 1;\n            if (this.board.update(this.currentPiece.matrix, this.offset)) {\n              this.offset.y = 0;\n              this.offset.x = 4;\n              this.totalRotations = 0;\n              this.currentPiece = this.nextPiece;\n              this.nextPiece = this.pieces.newPiece();\n            }\n            this.resetTime = 0;\n            this.boardStep();\n            this.gameOver = this.board.checkGameOver(this.currentPiece.matrix, this.offset);\n            if (this.gameOver) {\n              this.gameOverOnce = true;\n              this.playingGame = false;\n              let notGameOver = document.getElementById('not-game-over');\n              notGameOver.setAttribute(\"id\", \"game-over\");\n              cancelAnimationFrame(this.animationFrame);\n            }\n          }\n          break;\n        case 'w':\n        case 'ArrowUp':\n          e.preventDefault();\n          this.currentPiece = this.handleRotate(this.currentPiece);\n          let response = this.board.validateRotate(this.currentPiece.matrix, this.offset);\n          if (response.reRotate) {\n            this.currentPiece = this.handleUnrotate(this.currentPiece);\n          } else {\n            this.offset = response.offset;\n          }\n          this.boardStep();\n          break;\n        case ' ':\n          e.preventDefault();\n          if (!this.gameOver) {\n            e.preventDefault();\n            this.board.handleDrop(this.currentPiece.matrix, this.offset);\n            this.offset.y = 0;\n            this.offset.x = 4;\n            this.totalRotations = 0;\n            this.currentPiece = this.nextPiece;\n            this.nextPiece = this.pieces.newPiece();\n            this.boardStep();\n          }\n      }\n    });\n  }\n\n  restart() {\n    //clear old board because we are not actually clearing HTML canvas before\n    //new game starts playing\n    this.board.ctx.clearRect(0, 0, this.board.width, this.board.height);\n    this.board.emptyBoard();\n    let gameOver = document.getElementById('game-over');\n    gameOver.setAttribute(\"id\", \"not-game-over\");\n    this.animationFrame = null;\n    this.offset = {\n      x: 4,\n      y: 0\n    };\n    this.totalRotations = 0;\n    this.currentPiece = this.pieces.newPiece();\n    this.nextPiece = this.pieces.newPiece();\n    this.startTime = null;\n    this.resetTime = 0;\n    this.timeStep = 1000;\n    this.foreverTime = 0;\n    this.gameOver = false;\n    this.play();\n  }\n\n  play() {\n    if (this.playingGame || this.gameOver) {\n      return true;\n    } else {\n      this.playingGame = true;\n      this.megamanAudio.play();\n      this.megamanPlaying = true;\n\n\n      if (!this.gameOverOnce) {\n        this.addKeyListeners();\n        let gameStart = document.getElementById('before-game-start');\n        gameStart.setAttribute(\"id\", \"game-start\");\n      }\n\n      const render = (timestamp) => {\n        this.resetTime += timestamp-this.startTime;\n        this.foreverTime += timestamp-this.startTime;\n        if (this.foreverTime > 32000) {\n          this.foreverTime = 0;\n          this.timeStep = this.timeStep * 0.9;\n        }\n        if (this.resetTime > this.timeStep) {\n          this.resetTime = 0;\n          this.offset.y += 1;\n          if (this.board.update(this.currentPiece.matrix, this.offset)){\n            this.offset.y = 0;\n            this.offset.x = 4;\n            this.totalRotations = 0;\n            this.currentPiece = this.nextPiece;\n            this.nextPiece = this.pieces.newPiece();\n          }\n          this.boardStep();\n          this.gameOver = this.board.checkGameOver(this.currentPiece.matrix, this.offset);\n          if (this.gameOver) {\n            this.gameOverOnce = true;\n            this.playingGame = false;\n            let notGameOver = document.getElementById('not-game-over');\n            notGameOver.setAttribute(\"id\", \"game-over\");\n            cancelAnimationFrame(this.animationFrame);\n            return true;\n          }\n        }\n        this.startTime = timestamp;\n        this.animationFrame = requestAnimationFrame(render);\n      }\n\n      this.animationFrame = requestAnimationFrame((timestamp) => {\n        this.startTime = timestamp;\n        this.board.drawPiece(this.currentPiece.matrix, this.offset);\n        this.board.drawNext(this.nextPiece.matrix);\n        render(timestamp);\n      });\n    }\n  }\n\n}\n","import LinkedList from './linkedList';\n\nexport default class LRUCache {\n\n  constructor(maxCount, pieceValues) {\n    this.count = 0;\n    this.max = maxCount;\n    this.map = {};\n    this.list = new LinkedList();\n    this.pieceValues = pieceValues;\n  }\n\n  get(key) {\n    if (this.map[key] !== undefined) {\n      let node = this.map[key];\n      node.remove();\n      let newNode = this.list.add(node.key, node.val);\n      this.map[key] = newNode;\n    } else if (this.count < this.max) {\n      let newNode = this.list.add(key, this.pieceValues[key]);\n      this.count += 1;\n      this.map[key] = newNode;\n    } else {\n      let oldestNode = this.list.oldest();\n      oldestNode.remove();\n      delete this.map[oldestNode.key];\n      let newNode = this.list.add(key, this.pieceValues[key]);\n      this.map[key] = newNode;\n    }\n  }\n\n\n}\n","class Node {\n\n  constructor(key, val) {\n    this.key = key;\n    this.val = val;\n    this.next = null;\n    this.last = null;\n  }\n\n  remove() {\n    if (this.next) {\n      this.next.last = this.last;\n    }\n    if (this.last) {\n      this.last.next = this.next;\n    }\n    this.next = null;\n    this.last = null;\n  }\n\n\n}\n\nexport default class LinkedList {\n\n  constructor() {\n    //head node is the MRU, tail is the LRU to be ejected\n    this.head = new Node();\n    this.tail = new Node();\n    this.head.last = this.tail;\n    this.tail.next = this.head;\n  }\n\n  add(key, val) {\n    let node = new Node(key,val);\n    node.next = this.head;\n    node.last = this.head.last;\n    this.head.last.next = node;\n    this.head.last = node;\n    return node;\n  }\n\n\n  oldest() {\n    if (this.head.last === this.tail) {\n      return null;\n    } else {\n      return this.tail.next;\n    }\n  }\n\n  // newest() {\n  //   if (this.head.last === this.tail) {\n  //     return null;\n  //   } else {\n  //     return this.head.last;\n  //   }\n  // }\n\n}\n","import LRUCache from './lru/cache';\n\nexport default class Pieces {\n\n  constructor() {\n    this.pieces = {\n      'I': [[0,1,0,0],\n            [0,1,0,0],\n            [0,1,0,0],\n            [0,1,0,0]],\n      'O': [[0,0,0,0],\n            [0,2,2,0],\n            [0,2,2,0],\n            [0,0,0,0]],\n      'T': [[0,0,0],\n            [3,3,3],\n            [0,3,0]],\n      'L': [[0,4,0],\n            [0,4,0],\n            [0,4,4]],\n      'J': [[0,5,0],\n            [0,5,0],\n            [5,5,0]],\n      'Z': [[0,0,0],\n            [6,6,0],\n            [0,6,6]],\n      'S': [[0,0,0],\n            [0,7,7],\n            [7,7,0]]\n    };\n    this.bag = ['I','O','T','L','J','Z','S'];\n    this.lru = new LRUCache(3, this.pieces);\n  }\n\n  //the fisher-yates shuffle\n  shuffle() {\n    let randomIndex, current;\n    for (let i=this.bag.length-1; i>=0; i--) {\n      randomIndex = Math.floor(Math.random()*(i+1));\n      current = this.bag[i];\n      this.bag[i] = this.bag[randomIndex];\n      this.bag[randomIndex] = current;\n    }\n    return this.bag;\n  }\n\n  newPiece() {\n    let piece = this.shuffle()[0];\n    while (this.lru.map[piece] !== undefined) {\n      piece = this.shuffle()[0];\n    }\n    this.lru.get(piece);\n    return {\n      type: piece,\n      matrix: this.lru.map[piece].val\n    };\n  }\n\n}\n","import * as boardUtil from './util';\n\nexport default class Board {\n\n  constructor(grid) {\n    this.grid = grid;\n    this.rows = grid.length;\n    this.cols = grid[0].length;\n    this.emptyBoard = this.emptyBoard.bind(this);\n  }\n\n  emptyBoard() {\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        this.grid[i][j] = undefined;\n      }\n    }\n  }\n\n  update(piece, offset) {\n    if (offset.y < 0) {\n      return false;\n    }\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          if (y >= this.rows || typeof(this.grid[y][x]) !== 'undefined') {\n            this.setPiece(piece, offset.x, offset.y-1);\n            this.clearRows(piece.length, offset.y-1);\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  clearRows(numRows, startY){\n    for (let i=0; i<numRows; i++) {\n      if (this.fullRow(startY+i)) {\n        this.removeRow(startY+i);\n      }\n    }\n  }\n\n\n\n  fullRow(row_idx){\n    let row = this.grid[row_idx];\n    if (row === undefined) {\n      return false;\n    }\n    for (let i=0; i<row.length; i++) {\n      if (typeof(row[i]) === 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  removeRow(row_idx) {\n    let row = this.grid[row_idx];\n    for (let i=row_idx-1; i>=0; i--) {\n      for (let j=0; j<row.length; j++){\n        this.grid[i+1][j] = this.grid[i][j];\n      }\n    }\n    for (let j=0; j<row.length; j++){\n      this.grid[0][j] = undefined;\n    }\n  }\n\n  //updates the grid with the piece values\n  setPiece(piece, x, y) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          this.grid[y+i][x+j] = piece[i][j];\n        }\n      }\n    }\n  }\n\n  validPos(piece, offset) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          if (!boardUtil.between(x, 0, this.cols-1) || !boardUtil.between(y, 0, this.rows-1)) {\n            return false;\n          }\n          if (typeof(this.grid[y][x]) !== 'undefined') {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  //helper method for validateRotate\n  handleResponse(piece, offset, newOffset) {\n    if (this.validPos(piece, newOffset)) {\n      return {\n        reRotate: false,\n        offset: newOffset\n      };\n    } else {\n      return {\n        reRotate: true,\n        offset: offset\n      };\n    }\n  }\n\n  //helper method for validateRotate\n  handleX(x, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.between(x, 0, this.cols-1)) {\n      return null;\n    }\n    else if (x < 0) {\n      newOffset.x += 1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n    else if (x > (this.cols-1)) {\n      //reminder: may want to subtract Math.floor(piece.length/2)\n      //to account for the line pieces hugging the right side of the board\n      newOffset.x -=1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n  }\n\n  handleY(y, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.between(y, 0, this.rows-1)) {\n      return null;\n    }\n    else if (y < 0) {\n      newOffset.y += 1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n    else if (y > (this.rows-1)) {\n      newOffset.y -=1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n  }\n\n  handleP(x, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.rightOrLeft(piece, x) === 'left') {\n      newOffset.x += 1;\n      //try moving the piece up one before giving up\n      let response = this.handleResponse(piece, offset, newOffset);\n      if (response.reRotate){\n        newOffset.x -= 1;\n        newOffset.y -= 1;\n        return this.handleResponse(piece, offset, newOffset);\n      }\n      return response;\n    } else if (boardUtil.rightOrLeft(piece, x) === 'right'){\n      newOffset.x -=1;\n      let response = this.handleResponse(piece, offset, newOffset);\n      if (response.reRotate) {\n        newOffset.x += 1;\n        newOffset.y -= 1;\n        return this.handleResponse(piece, offset, newOffset);\n      }\n      return response;\n    }\n\n  }\n\n  validateRotate(piece, offset) {\n    let handledX, handledY;\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          handledX = this.handleX(x, piece, offset);\n          if (handledX) {\n            return handledX;\n          }\n          handledY = this.handleY(y, piece, offset);\n          if (handledY) {\n            return handledY;\n          }\n          if (typeof(this.grid[y][x]) !== 'undefined') {\n            return this.handleP(x, piece, offset);\n\n          }\n        }\n      }\n    }\n    return {\n      reRotate: false,\n      offset: offset\n    }\n  }\n\n  handleDrop(piece, offset) {\n    let minDelta;\n    minDelta = boardUtil.deltaY(piece, offset, this.rows, this.grid);\n    offset.y += minDelta;\n    this.setPiece(piece, offset.x, offset.y-1);\n    this.clearRows(piece.length, offset.y-1);\n  }\n\n  checkGameOver(piece, offset) {\n    if (offset.y !== 0) { return false; }\n    if (!this.validPos(piece, offset)) {\n      return true;\n    }\n    return false;\n  }\n\n  /*\n   █████  ██     ███    ███ ███████ ████████ ██   ██  ██████  ██████  ███████\n  ██   ██ ██     ████  ████ ██         ██    ██   ██ ██    ██ ██   ██ ██\n  ███████ ██     ██ ████ ██ █████      ██    ███████ ██    ██ ██   ██ ███████\n  ██   ██ ██     ██  ██  ██ ██         ██    ██   ██ ██    ██ ██   ██      ██\n  ██   ██ ██     ██      ██ ███████    ██    ██   ██  ██████  ██████  ███████\n  */\n\n\n\n  fullRows(numRows, startY){\n    for (let i=0; i<numRows; i++) {\n      if (this.fullRow(startY+i)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getMaxHeight() {\n    let peaksRemaining = 10;\n    let maxPeak = 0;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] === undefined) {\n          peaksRemaining -= 1;\n          if ((this.rows - i) > maxPeak) {\n            maxPeak = this.rows-i;\n          }\n        }\n      }\n    }\n    return maxPeak;\n  }\n\n  getCumulativeHeight(fullRows) {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] === undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    let cumulativeHeight = 0;\n    for (let p=0; p<peaks.length; p++) {\n      cumulativeHeight += peaks[p];\n    }\n    //do the below because remember we're not actually clearing rows,\n    //just keeping track of how many rows are filled\n    return cumulativeHeight - (fullRows*10);\n  }\n\n  getRelativeHeight() {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    let minPeak = 99;\n    let maxPeak = 0;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] === undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n          if (peaks[j] > maxPeak) {\n            maxPeak = peaks[j];\n          }\n          if (peaks[j] < minPeak) {\n            minPeak = peaks[j];\n          }\n        }\n      }\n    }\n    return maxPeak - minPeak;\n  }\n\n  getHoles() {\n    let holes = 0;\n    for (let i=1; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (this.grid[i][j] === undefined && this.grid[i-1][j]) {\n          holes += 1;\n        }\n      }\n    }\n    return holes;\n  }\n\n  //roughness is the sum of relative height differences between columns\n  getRoughness() {\n    let roughness = 0;\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] === undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    for (let p=0; p<peaks.length-1; p++) {\n      roughness += Math.abs(peaks[p] - peaks[p+1]);\n    }\n    return roughness;\n  }\n\n  removePiece(piece, x, y) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          this.grid[y+i][x+j] = undefined;\n        }\n      }\n    }\n  }\n\n\n\n}\n","export const rightOrLeft = (piece, x) => {\n  let middle = Math.floor(piece.length/2);\n  return (x < middle ? 'left':'right');\n}\n\nexport const between = (num, low, high) => {\n  if (num < low || num > high) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\nexport const deltaY = (piece, offset, rows, grid) => {\n  let minDelta, dy;\n  for (let i=0; i<piece.length; i++){\n    for (let j=0; j<piece[0].length; j++){\n      if (piece[i][j] !== 0) {\n        dy = 0;\n        while((i+offset.y+dy) < rows && !grid[i+offset.y+dy][j+offset.x]){\n          dy += 1;\n        }\n        if (!minDelta || dy < minDelta) { minDelta = dy; }\n      }\n    }\n  }\n  return minDelta;\n}\n\n\nexport const deepDup = (arr) => {\n  let duped = new Array(arr.length);\n  for (let i=0; i<duped.length; i++) {\n    duped[i] = new Array(arr[0].length);\n  }\n  for (let row=0; row<arr.length; row++) {\n    for (let col=0; col<arr[0].length; col++) {\n      duped[row][col] = arr[row][col];\n    }\n  }\n  return duped;\n}\n"],"sourceRoot":""}