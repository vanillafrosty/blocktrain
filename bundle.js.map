{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ai.js","webpack:///./src/app.js","webpack:///./src/board.js","webpack:///./src/game.js","webpack:///./src/lru/cache.js","webpack:///./src/lru/linkedList.js","webpack:///./src/pieces.js","webpack:///./src/shadowBoard.js","webpack:///./src/util.js"],"names":["boardUtil","AIGame","board","AI","populationSize","genomes","genomeIndex","movesTaken","movesLimit","createInitialPopulation","timeStep","score","generation","mutationRate","mutationStep","speedArr","speedIndex","powerSteps","genome","i","id","Math","random","rowsCleared","weightedHeight","cumulativeHeight","relativeHeight","holes","roughness","push","evaluateNextGenome","playingGame","aiDisplay","document","getElementById","children","innerHTML","length","evolve","makeNextMove","fitness","bestFutureMove","bestCurrentMove","possibleMoves","getPossibleMoves","currentPiece","shadowBoard","ShadowBoard","deepDup","grid","shadowMove","getHighestRatedMove","nextPiece","rating","updateScore","realMove","boardStep","move","drop","algorithm","piece","origOffset","x","offset","y","rotationsHsh","rotations","type","handleRotate","trans","gameOver","validPos","matrix","minDelta","deltaY","rows","setPiece","fullRows","checkGameOver","pow","getMaxHeight","getCumulativeHeight","getRelativeHeight","getHoles","getRoughness","removePiece","translation","totalRotations","r","origPiece","multiRotate","shadowOffset","handleDrop","moves","highestMove","megamanAudio","play","megamanPlaying","gameOverOnce","addKeyListeners","gameStart","setAttribute","controls","removeChild","append","render","timestamp","resetTime","startTime","powerWalk","update","moveIteration","boardIteration","animationFrame","requestAnimationFrame","drawPiece","drawNext","node","scrubBoard","sort","a","b","fittest","slice","floor","makeChild","mom","randNumRange","dad","child","randSelect","mutate","keys","Object","console","log","addEventListener","e","key","pieces","newPiece","emptyBoard","powerStep","Game","canvas","width","height","nextPieceCanvas","ctx","getContext","nextPieceCtx","Board","game","tracks","tracksIndex","src","event","toggleAudio","restart","cols","strokeStyle","outlineStrokeStyle","square_width","Array","colors","bind","j","undefined","clearRect","color","drawSquare","dupOffset","maxY","drawSquareOutline","drawNextSquare","s_w","fillStyle","lineWidth","fillRect","strokeRect","beginPath","moveTo","lineTo","stroke","clearRows","numRows","startY","fullRow","removeRow","row_idx","row","between","newOffset","reRotate","handleResponse","rightOrLeft","response","handledX","handledY","handleX","handleY","handleP","total","peaksRemaining","maxPeak","peaks","p","minPeak","currPeak","abs","Pieces","foreverTime","pause","temp","transposed","transpose","rotate","rotateCounter","preventDefault","notGameOver","cancelAnimationFrame","validateRotate","handleUnrotate","LRUCache","maxCount","pieceValues","count","max","map","list","LinkedList","remove","newNode","add","val","oldestNode","oldest","Node","next","last","head","tail","bag","lru","randomIndex","current","shuffle","get","setY","middle","num","low","high","dy","arr","duped","col","min","round"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","import Game from './game';\nimport * as boardUtil from './util';\nimport ShadowBoard from './shadowBoard';\n\nexport default class AIGame extends Game {\n\n  constructor(board) {\n    super(board);\n    this.AI = true;\n    this.populationSize = 6;\n    this.genomes = [];\n    this.genomeIndex = -1;\n    this.movesTaken = 0;\n    this.movesLimit = 500;\n    this.createInitialPopulation();\n    this.timeStep = 90;\n    this.score = 0;\n    this.generation = 0;\n    this.mutationRate = 0.05;\n    this.mutationStep = 0.2;\n    this.speedArr = [300, 90, 10, 0];\n    this.speedIndex = 1;\n    this.powerSteps = 3;\n  }\n\n\n  createInitialPopulation() {\n    let genome;\n    for (let i=0; i<this.populationSize; i++) {\n      genome = {\n   \t\t\tid: Math.random(),\n   \t\t\trowsCleared: Math.random() - 0.5,\n   \t\t\tweightedHeight: Math.random() - 0.5,\n   \t\t\tcumulativeHeight: Math.random() - 0.5,\n   \t\t\trelativeHeight: Math.random() - 0.5,\n   \t\t\tholes: Math.random() * 0.5,\n   \t\t\troughness: Math.random() - 0.5,\n      }\n      this.genomes.push(genome);\n    }\n    this.evaluateNextGenome();\n  }\n\n  evaluateNextGenome() {\n    this.score = 0;\n    this.genomeIndex += 1;\n    if (this.playingGame) {\n      let aiDisplay = document.getElementById('ai-display');\n      aiDisplay.children[2].innerHTML = `current genome: ${this.genomeIndex+1}/${this.populationSize}`;\n      if (this.genomeIndex >= this.genomes.length) {\n        this.evolve();\n        aiDisplay.children[2].innerHTML = `current genome: ${this.genomeIndex+1}/${this.populationSize}`;\n      }\n    }\n    this.movesTaken = 0;\n    this.makeNextMove();\n  }\n\n  makeNextMove() {\n    this.movesTaken += 1;\n    if (this.movesTaken > this.movesLimit) {\n      //evaluate the score for the current genome, and move to the next genome\n      this.genomes[this.genomeIndex].fitness = this.score;\n      this.evaluateNextGenome();\n    } else {\n      let bestFutureMove, bestCurrentMove;\n      //possible moves with this.currentPiece\n      let possibleMoves = this.getPossibleMoves(this.board, this.currentPiece);\n      for (let i=0; i<possibleMoves.length; i++) {\n        this.shadowBoard = new ShadowBoard(boardUtil.deepDup(this.board.grid));\n        this.shadowMove(possibleMoves[i], this.currentPiece);\n        bestFutureMove = this.getHighestRatedMove(this.getPossibleMoves(this.shadowBoard, this.nextPiece));\n        if (bestFutureMove) {\n          possibleMoves[i].rating += bestFutureMove.rating;\n        }\n      }\n      bestCurrentMove = this.getHighestRatedMove(possibleMoves);\n      //based on the bestCurrentMove, move this.currentPiece and set it on this.board\n      this.updateScore(bestCurrentMove);\n      //make sure realMove does not update this.offset.x to be NaN\n      //if bestCurrentMove is not a real move.\n      this.realMove(bestCurrentMove, this.currentPiece);\n      //draw stuff because we just made the best move\n      this.boardStep();\n    }\n  }\n\n  updateScore(move) {\n    if (!move) {\n      return true;\n    }\n    this.score += move.drop;\n    switch(move.algorithm.rowsCleared) {\n      case 1:\n        this.score += 400;\n        return true;\n      case 2:\n        this.score += 1000;\n        return true;\n      case 3:\n        this.score += 3000;\n        return true;\n      case 4:\n        this.score += 12000;\n        return true;\n    }\n  }\n\n  getPossibleMoves(board, piece) {\n    let origOffset = {\n      x: this.offset.x,\n      y: this.offset.y\n    };\n    let possibleMoves = [];\n    let rotationsHsh = {\n      'T': 4,\n      'O': 1,\n      'J': 4,\n      'L': 4,\n      'Z': 2,\n      'S': 2,\n      'I': 2\n    }\n    let rotations = rotationsHsh[piece.type];\n    for (let i=1; i<=rotations; i++) {\n      //since handleRotate is destructive, just keep rotating once.\n      //call multiRotate some other time.\n      piece = this.handleRotate(piece);\n      for (let trans=-5; trans<=5; trans++) {\n        let gameOver = false;\n        this.offset.x = origOffset.x;\n        this.offset.y = origOffset.y;\n        this.offset.x += trans;\n        if (board.validPos(piece.matrix, this.offset)) {\n          let minDelta = boardUtil.deltaY(piece.matrix, this.offset, board.rows, board.grid);\n          this.offset.y += minDelta;\n          board.setPiece(piece.matrix, this.offset.x, this.offset.y-1);\n          let rowsCleared = board.fullRows(piece.length, this.offset.y-1);\n          if (rowsCleared === 0) {\n            gameOver = board.checkGameOver(this.nextPiece.matrix, origOffset);\n          }\n          let algorithm = {\n  \t\t\t\t\trowsCleared: rowsCleared,\n  \t\t\t\t\tweightedHeight: Math.pow(board.getMaxHeight(), 1.5),\n  \t\t\t\t\tcumulativeHeight: board.getCumulativeHeight(rowsCleared),\n  \t\t\t\t\trelativeHeight: board.getRelativeHeight(),\n  \t\t\t\t\tholes: board.getHoles(),\n  \t\t\t\t\troughness: board.getRoughness()\n          };\n   \t\t\t\tlet rating = 0;\n   \t\t\t\trating += algorithm.rowsCleared * this.genomes[this.genomeIndex].rowsCleared;\n   \t\t\t\trating += algorithm.weightedHeight * this.genomes[this.genomeIndex].weightedHeight;\n   \t\t\t\trating += algorithm.cumulativeHeight * this.genomes[this.genomeIndex].cumulativeHeight;\n   \t\t\t\trating += algorithm.relativeHeight * this.genomes[this.genomeIndex].relativeHeight;\n   \t\t\t\trating += algorithm.holes * this.genomes[this.genomeIndex].holes;\n   \t\t\t\trating += algorithm.roughness * this.genomes[this.genomeIndex].roughness;\n   \t\t\t\t//if the move loses the game, slam its rating\n   \t\t\t\tif (gameOver) {\n   \t\t\t\t\trating -= 500;\n   \t\t\t\t}\n          board.removePiece(piece.matrix, this.offset.x, this.offset.y-1);\n   \t\t\t\t//push all possible moves, with their associated ratings and parameter values to an array\n   \t\t\t\tpossibleMoves.push({rotations: i, translation: trans, rating: rating, algorithm: algorithm, drop: minDelta-1});\n        }\n      }\n    }\n    this.offset = origOffset;\n    this.totalRotations = 0;\n    return possibleMoves;\n  }\n\n  multiRotate(piece, rotations) {\n    for (let r=0; r<rotations; r++) {\n      piece = this.handleRotate(piece);\n    }\n    return piece;\n  }\n\n  shadowMove(move, piece) {\n    let origPiece = boardUtil.deepDup(piece.matrix);\n    piece = this.multiRotate(piece, move.rotations);\n    let shadowOffset = {\n      x: this.offset.x,\n      y: this.offset.y\n    }\n    shadowOffset.x += move.translation;\n    this.shadowBoard.handleDrop(piece.matrix, shadowOffset);\n    piece.matrix = origPiece;\n  }\n\n  realMove(move, piece) {\n    if (!move) {\n      return true;\n    }\n    piece = this.multiRotate(piece, move.rotations);\n    this.offset.x += move.translation;\n    this.totalRotations = 0;\n  }\n\n  getHighestRatedMove(moves) {\n    let highestMove = moves[0];\n    if (moves.length === 0) {\n      return null;\n    }\n    for (let i=1; i<moves.length; i++) {\n      if (moves[i].rating > highestMove.rating) {\n        highestMove = moves[i];\n      }\n    }\n    return highestMove;\n  }\n\n  play() {\n    if (this.playingGame || this.gameOver) {\n      return true;\n    } else {\n      this.playingGame = true;\n      this.megamanAudio.play();\n      this.megamanPlaying = true;\n\n\n      if (!this.gameOverOnce) {\n        this.addKeyListeners();\n        let gameStart = document.getElementById('before-game-start');\n        gameStart.setAttribute(\"id\", \"game-start\");\n        let controls = document.getElementById('controls-container');\n        while (controls.children.length > 1) {\n          controls.removeChild(controls.children[1]);\n        }\n        let aiDisplay = document.getElementById('ai-display-none');\n        aiDisplay.setAttribute(\"id\", \"ai-display\");\n        aiDisplay.children[1].append(` ${this.generation}`);\n        aiDisplay.children[2].append(` ${this.genomeIndex+1}/${this.populationSize}`)\n      }\n\n      const render = (timestamp) => {\n        this.resetTime += timestamp-this.startTime;\n\n        if (this.timeStep === 0) {\n          this.powerWalk();\n        } else if (this.resetTime > this.timeStep) {\n          this.resetTime = 0;\n          this.offset.y += 1;\n          if (this.board.update(this.currentPiece.matrix, this.offset)){\n            this.moveIteration();\n          }\n          this.boardStep();\n          this.gameOver = this.board.checkGameOver(this.currentPiece.matrix, this.offset);\n          if (this.gameOver) {\n            this.boardIteration();\n          }\n        }\n        this.startTime = timestamp;\n        this.animationFrame = requestAnimationFrame(render);\n      }\n\n      this.animationFrame = requestAnimationFrame((timestamp) => {\n        this.startTime = timestamp;\n        this.board.drawPiece(this.currentPiece.matrix, this.offset);\n        this.board.drawNext(this.nextPiece.matrix);\n        render(timestamp);\n      });\n    }\n  }\n\n  evolve() {\n    this.generation += 1;\n    let node = document.getElementById('ai-display');\n    node.children[1].innerHTML = (`current generation: ${this.generation}`);\n    this.genomeIndex = 0;\n    this.movesTaken = 0;\n    this.scrubBoard();\n    this.genomes.sort( (a,b) => {\n      return b.fitness - a.fitness;\n    });\n    let fittest = this.genomes.slice(0,Math.floor(this.populationSize/2));\n    let children = [this.genomes[0]];\n    while (children.length < this.populationSize) {\n      children.push(this.makeChild(fittest));\n    }\n    this.genomes = children;\n\n  }\n\n  makeChild(genomes) {\n    let mom = genomes[boardUtil.randNumRange(0, genomes.length-1)];\n    let dad = genomes[boardUtil.randNumRange(0, genomes.length-1)];\n    while (dad === mom) {\n      dad = genomes[boardUtil.randNumRange(0, genomes.length-1)];\n    }\n    let child = {\n      id : Math.random(),\n      rowsCleared: boardUtil.randSelect(mom.rowsCleared, dad.rowsCleared),\n      weightedHeight: boardUtil.randSelect(mom.weightedHeight, dad.weightedHeight),\n      cumulativeHeight: boardUtil.randSelect(mom.cumulativeHeight, dad.cumulativeHeight),\n      relativeHeight: boardUtil.randSelect(mom.relativeHeight, dad.relativeHeight),\n      holes: boardUtil.randSelect(mom.holes, dad.holes),\n      roughness: boardUtil.randSelect(mom.roughness, dad.roughness),\n      fitness: -1\n    };\n    this.mutate(child);\n    return child;\n\n  }\n\n  mutate(child) {\n    let keys = Object.keys(child);\n    for (let i=0; i<keys.length; i++) {\n      if (keys[i] === \"fitness\") {\n        continue;\n      }\n      if (Math.random() < this.mutationRate) {\n        console.log(\"mutating!\");\n        console.log(child[keys[i]]);\n        console.log(keys[i]);\n        child[keys[i]] = child[keys[i]] + Math.random() * this.mutationStep * 2 - this.mutationStep;\n        console.log(child[keys[i]]);\n      }\n    }\n  }\n\n\n  addKeyListeners() {\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 's') {\n        this.speedIndex = (this.speedIndex + 1) % this.speedArr.length;\n        this.timeStep = this.speedArr[this.speedIndex];\n      }\n    });\n  }\n\n  moveIteration() {\n    this.offset.y = 0;\n    this.offset.x = 4;\n    this.totalRotations = 0;\n    this.currentPiece = this.nextPiece;\n    this.nextPiece = this.pieces.newPiece();\n    this.makeNextMove();\n  }\n\n  boardIteration() {\n    this.genomes[this.genomeIndex].fitness = this.score;\n    this.scrubBoard();\n    this.evaluateNextGenome();\n  }\n\n  scrubBoard() {\n    this.score = 0;\n    this.totalRotations = 0;\n    this.currentPiece = this.nextPiece;\n    this.nextPiece = this.pieces.newPiece();\n    this.board.emptyBoard();\n  }\n\n  powerStep() {\n    this.board.handleDrop(this.currentPiece.matrix, this.offset);\n    this.moveIteration();\n    this.gameOver = this.board.checkGameOver(this.currentPiece.matrix, this.offset);\n    if (this.gameOver) {\n      this.boardIteration();\n    }\n  }\n\n  powerWalk() {\n    for (let i=0; i<this.powerSteps; i++) {\n      this.powerStep();\n    }\n  }\n\n}\n","import Game from './game';\nimport Board from './board';\nimport AIGame from './ai';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById(\"canvas\");\n  canvas.width = 300;\n  canvas.height = 630;\n  const nextPieceCanvas = document.getElementById(\"next-piece-canvas\");\n  nextPieceCanvas.width = 120;\n  nextPieceCanvas.height = 150;\n\n  let ctx = canvas.getContext('2d');\n  let nextPieceCtx = nextPieceCanvas.getContext('2d');\n\n  let board = new Board(canvas.width, canvas.height, ctx, nextPieceCtx);\n  // let game = new AIGame(board);\n  let game;\n\n\n\n  const tracks = [\n    \"./music/metal-man.mp3\",\n    \"./music/crash-man.mp3\",\n    \"./music/dr-wily.mp3\"\n  ];\n  let tracksIndex = 0;\n  const megamanAudio = document.getElementById(\"megaman-theme\");\n  megamanAudio.addEventListener(\"ended\", () => {\n    tracksIndex = (tracksIndex+1) % tracks.length;\n    megamanAudio.src = tracks[tracksIndex];\n    megamanAudio.play();\n  });\n\n  document.addEventListener(\"keypress\", (event) => {\n    if (event.key === 'p'){\n      if (!game) {\n        game = new Game(board);\n      }\n      game.play();\n    } else if (event.key === 'a') {\n      if (!game) {\n        game = new AIGame(board);\n      }\n      game.play();\n    }\n  });\n\n  document.addEventListener(\"keypress\", (event) => {\n    if (event.key === 'm'){\n      game.toggleAudio();\n    } else if (event.key === 'r') {\n      if (!game.AI && game.gameOver) {\n        game.restart();\n      }\n    }\n  });\n\n\n});\n","import * as boardUtil from './util';\n\nexport default class Board {\n\n  constructor(width, height, ctx, nextPieceCtx) {\n    this.ctx = ctx;\n    this.nextPieceCtx = nextPieceCtx;\n    this.width = width;\n    this.height = height;\n    this.rows = 21;\n    this.cols = 10;\n    this.grid = [];\n    this.strokeStyle = '#000000';\n    this.outlineStrokeStyle = '#F9F9F9';\n    this.square_width = width/this.cols;\n    for (let i=0; i<this.rows; i++) {\n      this.grid[i] = new Array(this.cols);\n    }\n    this.colors = {\n      1: '#E24242',\n      2: '#F5DC41',\n      3: '#CC41F5',\n      4: '#3E4AE8',\n      5: '#3EE0E8',\n      6: '#3EE848',\n      7: '#F14D17'\n    };\n    this.emptyBoard = this.emptyBoard.bind(this);\n  }\n\n  emptyBoard() {\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        this.grid[i][j] = undefined;\n      }\n    }\n  }\n\n  render() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (typeof(this.grid[i][j]) !== 'undefined') {\n          let x = j*this.square_width;\n          let y = i*this.square_width;\n          let color = this.colors[this.grid[i][j]];\n          this.drawSquare(x,y, color);\n        }\n      }\n    }\n  }\n\n  drawPiece(piece, offset) {\n    let minDelta;\n    let dupOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    minDelta = boardUtil.deltaY(piece, offset, this.rows, this.grid);\n    dupOffset.y += minDelta-1;\n    let x, y, maxY, color;\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          x = (offset.x+j)*this.square_width;\n          y = (offset.y+i)*this.square_width;\n          maxY = (dupOffset.y+i)*this.square_width;\n          color = this.colors[piece[i][j]];\n          this.drawSquare(x, y, color);\n          this.drawSquareOutline(x, maxY, color);\n        }\n      }\n    }\n  }\n\n\n  drawNext(piece) {\n    const offset = {\n      x: 0,\n      y: 1\n    };\n    //hard code width and height for now\n    this.nextPieceCtx.clearRect(0, 0, 120, 150);\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = (offset.x+j)*this.square_width;\n          let y = (offset.y+i)*this.square_width;\n          let color = this.colors[piece[i][j]];\n          this.drawNextSquare(x, y, color);\n        }\n      }\n    }\n  }\n\n  drawNextSquare(x, y, color){\n    const s_w = this.square_width;\n    this.nextPieceCtx.fillStyle = color;\n    this.nextPieceCtx.strokeStyle = this.strokeStyle;\n    this.nextPieceCtx.lineWidth = 2;\n    this.nextPieceCtx.fillRect(x, y, s_w, s_w);\n    this.nextPieceCtx.strokeRect(x, y, s_w, s_w);\n    this.nextPieceCtx.beginPath();\n    this.nextPieceCtx.moveTo(x+s_w/4, y+s_w*(3/4));\n    this.nextPieceCtx.lineTo(x+s_w/4, y+s_w/4);\n    this.nextPieceCtx.lineTo(x+s_w*(3/4), y+s_w/4);\n    this.nextPieceCtx.stroke();\n  }\n\n  drawSquare(x, y, color)  {\n    const s_w = this.square_width;\n    this.ctx.fillStyle = color;\n    this.ctx.strokeStyle = this.strokeStyle;\n    this.ctx.lineWidth = 2;\n    this.ctx.fillRect(x, y, s_w, s_w);\n    this.ctx.strokeRect(x, y, s_w, s_w);\n    this.ctx.beginPath();\n    this.ctx.moveTo(x+s_w/4, y+s_w*(3/4));\n    this.ctx.lineTo(x+s_w/4, y+s_w/4);\n    this.ctx.lineTo(x+s_w*(3/4), y+s_w/4);\n    this.ctx.stroke();\n  }\n\n  drawSquareOutline(x, y, color) {\n    const s_w = this.square_width;\n    this.ctx.strokeStyle = this.outlineStrokeStyle;\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeRect(x, y, s_w, s_w);\n  }\n\n  update(piece, offset) {\n    if (offset.y < 0) {\n      return false;\n    }\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          //we allow y>=this.rows because update is used to set a piece at\n          //the very bottom of the board (in a fresh game). this.grid[y][x]\n          //fails as a check in this case.\n          if (y >= this.rows || typeof(this.grid[y][x]) !== 'undefined') {\n            this.setPiece(piece, offset.x, offset.y-1);\n            this.clearRows(piece.length, offset.y-1);\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  clearRows(numRows, startY){\n    for (let i=0; i<numRows; i++) {\n      if (this.fullRow(startY+i)) {\n        this.removeRow(startY+i);\n      }\n    }\n  }\n\n\n\n  fullRow(row_idx){\n    let row = this.grid[row_idx];\n    if (row === undefined) {\n      return false;\n    }\n    for (let i=0; i<row.length; i++) {\n      if (typeof(row[i]) === 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  removeRow(row_idx) {\n    let row = this.grid[row_idx];\n    for (let i=row_idx-1; i>=0; i--) {\n      for (let j=0; j<row.length; j++){\n        this.grid[i+1][j] = this.grid[i][j];\n      }\n    }\n    for (let j=0; j<row.length; j++){\n      this.grid[0][j] = undefined;\n    }\n  }\n\n  //updates the grid with the piece values\n  setPiece(piece, x, y) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          this.grid[y+i][x+j] = piece[i][j];\n        }\n      }\n    }\n  }\n\n  validPos(piece, offset) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          if (!boardUtil.between(x, 0, this.cols-1) || !boardUtil.between(y, 0, this.rows-1)) {\n            return false;\n          }\n          if (typeof(this.grid[y][x]) !== 'undefined') {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  //helper method for validateRotate\n  handleResponse(piece, offset, newOffset) {\n    if (this.validPos(piece, newOffset)) {\n      return {\n        reRotate: false,\n        offset: newOffset\n      };\n    } else {\n      return {\n        reRotate: true,\n        offset: offset\n      };\n    }\n  }\n\n  //helper method for validateRotate\n  handleX(x, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.between(x, 0, this.cols-1)) {\n      return null;\n    }\n    else if (x < 0) {\n      newOffset.x += 1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n    else if (x > (this.cols-1)) {\n      //reminder: may want to subtract Math.floor(piece.length/2)\n      //to account for the line pieces hugging the right side of the board\n      newOffset.x -=1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n  }\n\n  handleY(y, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.between(y, 0, this.rows-1)) {\n      return null;\n    }\n    else if (y < 0) {\n      newOffset.y += 1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n    else if (y > (this.rows-1)) {\n      newOffset.y -=1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n  }\n\n  handleP(x, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.rightOrLeft(piece, x) === 'left') {\n      newOffset.x += 1;\n      //try moving the piece up one before giving up\n      let response = this.handleResponse(piece, offset, newOffset);\n      if (response.reRotate){\n        newOffset.x -= 1;\n        newOffset.y -= 1;\n        return this.handleResponse(piece, offset, newOffset);\n      }\n      return response;\n    } else if (boardUtil.rightOrLeft(piece, x) === 'right'){\n      newOffset.x -=1;\n      let response = this.handleResponse(piece, offset, newOffset);\n      if (response.reRotate) {\n        newOffset.x += 1;\n        newOffset.y -= 1;\n        return this.handleResponse(piece, offset, newOffset);\n      }\n      return response;\n    }\n\n  }\n\n  validateRotate(piece, offset) {\n    let handledX, handledY;\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          handledX = this.handleX(x, piece, offset);\n          if (handledX) {\n            return handledX;\n          }\n          handledY = this.handleY(y, piece, offset);\n          if (handledY) {\n            return handledY;\n          }\n          if (typeof(this.grid[y][x]) !== 'undefined') {\n            return this.handleP(x, piece, offset);\n\n          }\n        }\n      }\n    }\n    return {\n      reRotate: false,\n      offset: offset\n    }\n  }\n\n  handleDrop(piece, offset) {\n    let minDelta;\n    minDelta = boardUtil.deltaY(piece, offset, this.rows, this.grid);\n    offset.y += minDelta;\n    this.setPiece(piece, offset.x, offset.y-1);\n    this.clearRows(piece.length, offset.y-1);\n  }\n\n  checkGameOver(piece, offset) {\n    if (offset.y !== 0) { return false; }\n    if (!this.validPos(piece, offset)) {\n      return true;\n    }\n    return false;\n  }\n\n  /*\n   █████  ██     ███    ███ ███████ ████████ ██   ██  ██████  ██████  ███████\n  ██   ██ ██     ████  ████ ██         ██    ██   ██ ██    ██ ██   ██ ██\n  ███████ ██     ██ ████ ██ █████      ██    ███████ ██    ██ ██   ██ ███████\n  ██   ██ ██     ██  ██  ██ ██         ██    ██   ██ ██    ██ ██   ██      ██\n  ██   ██ ██     ██      ██ ███████    ██    ██   ██  ██████  ██████  ███████\n  */\n\n\n\n  fullRows(numRows, startY){\n    let total = 0;\n    for (let i=0; i<numRows; i++) {\n      if (this.fullRow(startY+i)) {\n        total += 1;\n      }\n    }\n    return total;\n  }\n\n  getMaxHeight() {\n    let peaksRemaining = 10;\n    let maxPeak = 0;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined) {\n          peaksRemaining -= 1;\n          if ((this.rows - i) > maxPeak) {\n            maxPeak = this.rows-i;\n          }\n        }\n      }\n    }\n    return maxPeak;\n  }\n\n  getCumulativeHeight(fullRows) {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    let cumulativeHeight = 0;\n    for (let p=0; p<peaks.length; p++) {\n      if (peaks[p] > 0) {\n        cumulativeHeight += peaks[p];\n      }\n    }\n    //do the below because remember we're not actually clearing rows,\n    //just keeping track of how many rows are filled\n    return cumulativeHeight - (fullRows*10);\n  }\n\n  getRelativeHeight() {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    let minPeak = 99;\n    let maxPeak = 0;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n          if (peaks[j] > maxPeak) {\n            maxPeak = peaks[j];\n          }\n          if (peaks[j] < minPeak) {\n            minPeak = peaks[j];\n          }\n        }\n      }\n    }\n    return maxPeak - minPeak;\n  }\n\n  getHoles() {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    let holes = 0;\n    for (let p=0; p<peaks.length; p++) {\n      for (let row=20; row>(this.rows-peaks[p]); row--) {\n        if (this.grid[row][p] === undefined) {\n          holes += 1;\n        }\n      }\n    }\n    return holes;\n  }\n\n  //roughness is the sum of relative height differences between columns\n  getRoughness() {\n    let roughness = 0;\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    for (let p=0; p<peaks.length-1; p++) {\n      let currPeak = peaks[p+1] < 0 ? 0 : peaks[p+1];\n      roughness += Math.abs(peaks[p] - currPeak);\n    }\n    return roughness;\n  }\n\n  removePiece(piece, x, y) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          this.grid[y+i][x+j] = undefined;\n        }\n      }\n    }\n  }\n\n\n}\n","import Pieces from './pieces';\n\nexport default class Game {\n\n  constructor(board) {\n    this.AI = false;\n    this.gameOverOnce = false; //to make sure we don't add multiple event listeners\n    this.animationFrame = null;\n    this.board = board;\n    this.offset = {\n      x: 4,\n      y: 0\n    };\n    this.totalRotations = 0;\n    this.pieces = new Pieces();\n    this.currentPiece = this.pieces.newPiece();\n    this.nextPiece = this.pieces.newPiece();\n    this.startTime;\n    this.resetTime = 0;\n    this.foreverTime = 0;\n    this.timeStep = 1000;\n    this.megamanPlaying = false;\n    this.playingGame = false;\n    this.gameOver = false;\n    this.megamanAudio = document.getElementById(\"megaman-theme\");\n  }\n\n  toggleAudio(){\n    if (this.playingGame || this.gameOver) {\n      if (this.megamanPlaying){\n        this.megamanAudio.pause();\n        this.megamanPlaying = false;\n      } else {\n        this.megamanAudio.play();\n        this.megamanPlaying = true;\n      }\n    }\n  }\n\n  //transpose a square matrix with space considerations\n  transpose(matrix) {\n    let temp;\n    for (let i=0; i<matrix.length; i++){\n      for (let j=i+1; j<matrix.length; j++){\n        temp = matrix[i][j];\n        matrix[i][j] = matrix[j][i];\n        matrix[j][i] = temp;\n      }\n    }\n    return matrix;\n  }\n\n  //we are prioritizing space over time complexity here. creating a new\n  //matrix should give us faster time complexity, but both ways are still O(n^2)\n  rotate(matrix) {\n    let temp;\n    let transposed = this.transpose(matrix);\n    //reverse the columns\n    for (let i=0; i<matrix.length; i++) {\n      for (let j=0; j<Math.floor(matrix.length/2); j++){\n        temp = matrix[i][j];\n        matrix[i][j] = matrix[i][matrix.length-1-j];\n        matrix[i][matrix.length-1-j] = temp;\n      }\n    }\n    return matrix;\n  }\n\n  rotateCounter(matrix) {\n    let temp;\n    let transposed = this.transpose(matrix);\n    //reverse the rows\n    for (let i=0; i<Math.floor(matrix.length/2); i++) {\n      for (let j=0; j<matrix.length; j++){\n        temp = matrix[i][j];\n        matrix[i][j] = matrix[matrix.length-1-i][j];\n        matrix[matrix.length-1-i][j] = temp;\n      }\n    }\n    return matrix;\n  }\n\n  handleRotate(piece) {\n    switch(piece.type) {\n      case 'T':\n      case 'O':\n      case 'J':\n      case 'L':\n        piece.matrix = this.rotate(piece.matrix);\n        return piece;\n      case 'Z':\n      case 'S':\n      case 'I':\n        this.totalRotations += 1;\n        if (this.totalRotations % 2 !== 0) {\n          piece.matrix = this.rotate(piece.matrix);\n        } else {\n          piece.matrix = this.rotateCounter(piece.matrix);\n        }\n        return piece;\n    }\n  }\n\n  handleUnrotate(piece) {\n    switch(piece.type) {\n      case 'T':\n      case 'O':\n      case 'J':\n      case 'L':\n        piece.matrix = this.rotateCounter(piece.matrix);\n        return piece;\n      case 'Z':\n      case 'S':\n      case 'I':\n        //since we're unrotating, at a high level of thinking we\n        //shouldn't actually count another rotation.\n        // this.totalRotations += 1;\n        if (this.totalRotations % 2 !== 0) {\n          piece.matrix = this.rotateCounter(piece.matrix);\n        } else {\n          piece.matrix = this.rotate(piece.matrix);\n        }\n        return piece;\n    }\n  }\n\n  boardStep() {\n    this.board.render();\n    this.board.drawPiece(this.currentPiece.matrix, this.offset);\n    this.board.drawNext(this.nextPiece.matrix);\n  }\n\n  addKeyListeners() {\n    document.addEventListener('keydown', (e) => {\n      switch(e.key) {\n        case 'd':\n        case 'ArrowRight':\n          if (!this.gameOver) {\n            this.offset.x += 1;\n            if (this.board.validPos(this.currentPiece.matrix, this.offset)) {\n              this.boardStep();\n            } else {\n              this.offset.x -= 1;\n            }\n          }\n          break;\n        case 'a':\n        case 'ArrowLeft':\n          if (!this.gameOver) {\n            this.offset.x -= 1;\n            if (this.board.validPos(this.currentPiece.matrix, this.offset)){\n              this.boardStep();\n            } else {\n              this.offset.x += 1;\n            }\n          }\n          break;\n        case 's':\n        case 'ArrowDown':\n          e.preventDefault();\n          if (!this.gameOver){\n            this.offset.y += 1;\n            if (this.board.update(this.currentPiece.matrix, this.offset)) {\n              this.offset.y = 0;\n              this.offset.x = 4;\n              this.totalRotations = 0;\n              this.currentPiece = this.nextPiece;\n              this.nextPiece = this.pieces.newPiece();\n            }\n            this.resetTime = 0;\n            this.boardStep();\n            this.gameOver = this.board.checkGameOver(this.currentPiece.matrix, this.offset);\n            if (this.gameOver) {\n              this.gameOverOnce = true;\n              this.playingGame = false;\n              let notGameOver = document.getElementById('not-game-over');\n              notGameOver.setAttribute(\"id\", \"game-over\");\n              cancelAnimationFrame(this.animationFrame);\n            }\n          }\n          break;\n        case 'w':\n        case 'ArrowUp':\n          e.preventDefault();\n          this.currentPiece = this.handleRotate(this.currentPiece);\n          let response = this.board.validateRotate(this.currentPiece.matrix, this.offset);\n          if (response.reRotate) {\n            this.currentPiece = this.handleUnrotate(this.currentPiece);\n          } else {\n            this.offset = response.offset;\n          }\n          this.boardStep();\n          break;\n        case ' ':\n          e.preventDefault();\n          if (!this.gameOver) {\n            e.preventDefault();\n            this.board.handleDrop(this.currentPiece.matrix, this.offset);\n            this.offset.y = 0;\n            this.offset.x = 4;\n            this.totalRotations = 0;\n            this.currentPiece = this.nextPiece;\n            this.nextPiece = this.pieces.newPiece();\n            this.boardStep();\n          }\n      }\n    });\n  }\n\n  restart() {\n    //clear old board because we are not actually clearing HTML canvas before\n    //new game starts playing\n    this.board.ctx.clearRect(0, 0, this.board.width, this.board.height);\n    this.board.emptyBoard();\n    let gameOver = document.getElementById('game-over');\n    gameOver.setAttribute(\"id\", \"not-game-over\");\n    this.animationFrame = null;\n    this.offset = {\n      x: 4,\n      y: 0\n    };\n    this.totalRotations = 0;\n    this.currentPiece = this.pieces.newPiece();\n    this.nextPiece = this.pieces.newPiece();\n    this.startTime = null;\n    this.resetTime = 0;\n    this.timeStep = 1000;\n    this.foreverTime = 0;\n    this.gameOver = false;\n    this.play();\n  }\n\n  play() {\n    if (this.playingGame || this.gameOver) {\n      return true;\n    } else {\n      this.playingGame = true;\n      this.megamanAudio.play();\n      this.megamanPlaying = true;\n\n\n      if (!this.gameOverOnce) {\n        this.addKeyListeners();\n        let gameStart = document.getElementById('before-game-start');\n        gameStart.setAttribute(\"id\", \"game-start\");\n      }\n\n      const render = (timestamp) => {\n        this.resetTime += timestamp-this.startTime;\n        this.foreverTime += timestamp-this.startTime;\n        if (this.foreverTime > 32000) {\n          this.foreverTime = 0;\n          this.timeStep = this.timeStep * 0.9;\n        }\n        if (this.resetTime > this.timeStep) {\n          this.resetTime = 0;\n          this.offset.y += 1;\n          if (this.board.update(this.currentPiece.matrix, this.offset)){\n            this.offset.y = 0;\n            this.offset.x = 4;\n            this.totalRotations = 0;\n            this.currentPiece = this.nextPiece;\n            this.nextPiece = this.pieces.newPiece();\n          }\n          this.boardStep();\n          this.gameOver = this.board.checkGameOver(this.currentPiece.matrix, this.offset);\n          if (this.gameOver) {\n            this.gameOverOnce = true;\n            this.playingGame = false;\n            let notGameOver = document.getElementById('not-game-over');\n            notGameOver.setAttribute(\"id\", \"game-over\");\n            cancelAnimationFrame(this.animationFrame);\n            return true;\n          }\n        }\n        this.startTime = timestamp;\n        this.animationFrame = requestAnimationFrame(render);\n      }\n\n      this.animationFrame = requestAnimationFrame((timestamp) => {\n        this.startTime = timestamp;\n        this.board.drawPiece(this.currentPiece.matrix, this.offset);\n        this.board.drawNext(this.nextPiece.matrix);\n        render(timestamp);\n      });\n    }\n  }\n\n}\n","import LinkedList from './linkedList';\n\nexport default class LRUCache {\n\n  constructor(maxCount, pieceValues) {\n    this.count = 0;\n    this.max = maxCount;\n    this.map = {};\n    this.list = new LinkedList();\n    this.pieceValues = pieceValues;\n  }\n\n  get(key) {\n    if (this.map[key] !== undefined) {\n      let node = this.map[key];\n      node.remove();\n      let newNode = this.list.add(node.key, node.val);\n      this.map[key] = newNode;\n    } else if (this.count < this.max) {\n      let newNode = this.list.add(key, this.pieceValues[key]);\n      this.count += 1;\n      this.map[key] = newNode;\n    } else {\n      let oldestNode = this.list.oldest();\n      oldestNode.remove();\n      delete this.map[oldestNode.key];\n      let newNode = this.list.add(key, this.pieceValues[key]);\n      this.map[key] = newNode;\n    }\n  }\n\n\n}\n","class Node {\n\n  constructor(key, val) {\n    this.key = key;\n    this.val = val;\n    this.next = null;\n    this.last = null;\n  }\n\n  remove() {\n    if (this.next) {\n      this.next.last = this.last;\n    }\n    if (this.last) {\n      this.last.next = this.next;\n    }\n    this.next = null;\n    this.last = null;\n  }\n\n\n}\n\nexport default class LinkedList {\n\n  constructor() {\n    //head node is the MRU, tail is the LRU to be ejected\n    this.head = new Node();\n    this.tail = new Node();\n    this.head.last = this.tail;\n    this.tail.next = this.head;\n  }\n\n  add(key, val) {\n    let node = new Node(key,val);\n    node.next = this.head;\n    node.last = this.head.last;\n    this.head.last.next = node;\n    this.head.last = node;\n    return node;\n  }\n\n\n  oldest() {\n    if (this.head.last === this.tail) {\n      return null;\n    } else {\n      return this.tail.next;\n    }\n  }\n\n  // newest() {\n  //   if (this.head.last === this.tail) {\n  //     return null;\n  //   } else {\n  //     return this.head.last;\n  //   }\n  // }\n\n}\n","import LRUCache from './lru/cache';\n\nexport default class Pieces {\n\n  constructor() {\n    this.pieces = {\n      'I': [[0,1,0,0],\n            [0,1,0,0],\n            [0,1,0,0],\n            [0,1,0,0]],\n      'O': [[0,0,0,0],\n            [0,2,2,0],\n            [0,2,2,0],\n            [0,0,0,0]],\n      'T': [[0,0,0],\n            [3,3,3],\n            [0,3,0]],\n      'L': [[0,4,0],\n            [0,4,0],\n            [0,4,4]],\n      'J': [[0,5,0],\n            [0,5,0],\n            [5,5,0]],\n      'Z': [[0,0,0],\n            [6,6,0],\n            [0,6,6]],\n      'S': [[0,0,0],\n            [0,7,7],\n            [7,7,0]]\n    };\n    this.bag = ['I','O','T','L','J','Z','S'];\n    this.lru = new LRUCache(3, this.pieces);\n  }\n\n  //the fisher-yates shuffle\n  shuffle() {\n    let randomIndex, current;\n    for (let i=this.bag.length-1; i>=0; i--) {\n      randomIndex = Math.floor(Math.random()*(i+1));\n      current = this.bag[i];\n      this.bag[i] = this.bag[randomIndex];\n      this.bag[randomIndex] = current;\n    }\n    return this.bag;\n  }\n\n  newPiece() {\n    let piece = this.shuffle()[0];\n    while (this.lru.map[piece] !== undefined) {\n      piece = this.shuffle()[0];\n    }\n    this.lru.get(piece);\n    return {\n      type: piece,\n      matrix: this.lru.map[piece].val\n    };\n  }\n\n}\n","import * as boardUtil from './util';\n\nexport default class ShadowBoard {\n\n  constructor(grid) {\n    this.grid = grid;\n    this.rows = grid.length;\n    this.cols = grid[0].length;\n    this.emptyBoard = this.emptyBoard.bind(this);\n  }\n\n  emptyBoard() {\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        this.grid[i][j] = undefined;\n      }\n    }\n  }\n\n  update(piece, offset) {\n    if (offset.y < 0) {\n      return false;\n    }\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          if (y >= this.rows || typeof(this.grid[y][x]) !== 'undefined') {\n            this.setPiece(piece, offset.x, offset.y-1);\n            this.clearRows(piece.length, offset.y-1);\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  clearRows(numRows, startY){\n    for (let i=0; i<numRows; i++) {\n      if (this.fullRow(startY+i)) {\n        this.removeRow(startY+i);\n      }\n    }\n  }\n\n\n\n  fullRow(row_idx){\n    let row = this.grid[row_idx];\n    if (row === undefined) {\n      return false;\n    }\n    for (let i=0; i<row.length; i++) {\n      if (typeof(row[i]) === 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  removeRow(row_idx) {\n    let row = this.grid[row_idx];\n    for (let i=row_idx-1; i>=0; i--) {\n      for (let j=0; j<row.length; j++){\n        this.grid[i+1][j] = this.grid[i][j];\n      }\n    }\n    for (let j=0; j<row.length; j++){\n      this.grid[0][j] = undefined;\n    }\n  }\n\n  //updates the grid with the piece values\n  setPiece(piece, x, y) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          this.grid[y+i][x+j] = piece[i][j];\n        }\n      }\n    }\n  }\n\n  validPos(piece, offset) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          if (!boardUtil.between(x, 0, this.cols-1) || !boardUtil.between(y, 0, this.rows-1)) {\n            return false;\n          }\n          if (typeof(this.grid[y][x]) !== 'undefined') {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  //helper method for validateRotate\n  handleResponse(piece, offset, newOffset) {\n    if (this.validPos(piece, newOffset)) {\n      return {\n        reRotate: false,\n        offset: newOffset\n      };\n    } else {\n      return {\n        reRotate: true,\n        offset: offset\n      };\n    }\n  }\n\n  //helper method for validateRotate\n  handleX(x, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.between(x, 0, this.cols-1)) {\n      return null;\n    }\n    else if (x < 0) {\n      newOffset.x += 1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n    else if (x > (this.cols-1)) {\n      //reminder: may want to subtract Math.floor(piece.length/2)\n      //to account for the line pieces hugging the right side of the board\n      newOffset.x -=1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n  }\n\n  handleY(y, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.between(y, 0, this.rows-1)) {\n      return null;\n    }\n    else if (y < 0) {\n      newOffset.y += 1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n    else if (y > (this.rows-1)) {\n      newOffset.y -=1;\n      return this.handleResponse(piece, offset, newOffset);\n    }\n  }\n\n  handleP(x, piece, offset) {\n    let newOffset = {\n      x: offset.x,\n      y: offset.y\n    };\n    if (boardUtil.rightOrLeft(piece, x) === 'left') {\n      newOffset.x += 1;\n      //try moving the piece up one before giving up\n      let response = this.handleResponse(piece, offset, newOffset);\n      if (response.reRotate){\n        newOffset.x -= 1;\n        newOffset.y -= 1;\n        return this.handleResponse(piece, offset, newOffset);\n      }\n      return response;\n    } else if (boardUtil.rightOrLeft(piece, x) === 'right'){\n      newOffset.x -=1;\n      let response = this.handleResponse(piece, offset, newOffset);\n      if (response.reRotate) {\n        newOffset.x += 1;\n        newOffset.y -= 1;\n        return this.handleResponse(piece, offset, newOffset);\n      }\n      return response;\n    }\n\n  }\n\n  validateRotate(piece, offset) {\n    let handledX, handledY;\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          let x = offset.x+j;\n          let y = offset.y+i;\n          handledX = this.handleX(x, piece, offset);\n          if (handledX) {\n            return handledX;\n          }\n          handledY = this.handleY(y, piece, offset);\n          if (handledY) {\n            return handledY;\n          }\n          if (typeof(this.grid[y][x]) !== 'undefined') {\n            return this.handleP(x, piece, offset);\n\n          }\n        }\n      }\n    }\n    return {\n      reRotate: false,\n      offset: offset\n    }\n  }\n\n  handleDrop(piece, offset) {\n    let minDelta;\n    let setY;\n    minDelta = boardUtil.deltaY(piece, offset, this.rows, this.grid);\n    offset.y += minDelta;\n    if (offset.y === 0) {\n      setY = 0;\n    } else {\n      setY = offset.y-1;\n    }\n    this.setPiece(piece, offset.x, setY);\n    this.clearRows(piece.length, setY);\n  }\n\n  checkGameOver(piece, offset) {\n    if (offset.y !== 0) { return false; }\n    if (!this.validPos(piece, offset)) {\n      return true;\n    }\n    return false;\n  }\n\n  /*\n   █████  ██     ███    ███ ███████ ████████ ██   ██  ██████  ██████  ███████\n  ██   ██ ██     ████  ████ ██         ██    ██   ██ ██    ██ ██   ██ ██\n  ███████ ██     ██ ████ ██ █████      ██    ███████ ██    ██ ██   ██ ███████\n  ██   ██ ██     ██  ██  ██ ██         ██    ██   ██ ██    ██ ██   ██      ██\n  ██   ██ ██     ██      ██ ███████    ██    ██   ██  ██████  ██████  ███████\n  */\n\n\n\n  fullRows(numRows, startY){\n    let total = 0;\n    for (let i=0; i<numRows; i++) {\n      if (this.fullRow(startY+i)) {\n        total += 1;\n      }\n    }\n    return total;\n  }\n\n  getMaxHeight() {\n    let peaksRemaining = 10;\n    let maxPeak = 0;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined) {\n          peaksRemaining -= 1;\n          if ((this.rows - i) > maxPeak) {\n            maxPeak = this.rows-i;\n          }\n        }\n      }\n    }\n    return maxPeak;\n  }\n\n  getCumulativeHeight(fullRows) {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    let cumulativeHeight = 0;\n    for (let p=0; p<peaks.length; p++) {\n      if (peaks[p] > 0) {\n        cumulativeHeight += peaks[p];\n      }\n    }\n    //do the below because remember we're not actually clearing rows,\n    //just keeping track of how many rows are filled\n    return cumulativeHeight - (fullRows*10);\n  }\n\n  getRelativeHeight() {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    let minPeak = 99;\n    let maxPeak = 0;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n          if (peaks[j] > maxPeak) {\n            maxPeak = peaks[j];\n          }\n          if (peaks[j] < minPeak) {\n            minPeak = peaks[j];\n          }\n        }\n      }\n    }\n    return maxPeak - minPeak;\n  }\n\n  getHoles() {\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    let holes = 0;\n    for (let p=0; p<peaks.length; p++) {\n      for (let row=0; row<peaks[p]; row++) {\n        if (this.grid[row][p] === undefined) {\n          holes += 1;\n        }\n      }\n    }\n    return holes;\n  }\n\n  //roughness is the sum of relative height differences between columns\n  getRoughness() {\n    let roughness = 0;\n    let peaks = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let peaksRemaining = 10;\n    for (let i=0; i<this.rows; i++) {\n      for (let j=0; j<this.cols; j++) {\n        if (peaksRemaining === 0) {\n          break;\n        }\n        if (this.grid[i][j] !== undefined && peaks[j] < 0) {\n          peaks[j] = this.rows-i;\n          peaksRemaining -= 1;\n        }\n      }\n    }\n    for (let p=0; p<peaks.length-1; p++) {\n      let currPeak = peaks[p+1] < 0 ? 0 : peaks[p+1];\n      roughness += Math.abs(peaks[p] - currPeak);\n    }\n    return roughness;\n  }\n\n  removePiece(piece, x, y) {\n    for (let i=0; i<piece.length; i++) {\n      for (let j=0; j<piece[0].length; j++) {\n        if (piece[i][j] !== 0) {\n          this.grid[y+i][x+j] = undefined;\n        }\n      }\n    }\n  }\n\n\n\n}\n","export const rightOrLeft = (piece, x) => {\n  let middle = Math.floor(piece.length/2);\n  return (x < middle ? 'left':'right');\n}\n\nexport const between = (num, low, high) => {\n  if (num < low || num > high) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\nexport const deltaY = (piece, offset, rows, grid) => {\n  let minDelta, dy;\n  for (let i=0; i<piece.length; i++){\n    for (let j=0; j<piece[0].length; j++){\n      if (piece[i][j] !== 0) {\n        dy = 0;\n        while((i+offset.y+dy) < rows && !grid[i+offset.y+dy][j+offset.x]){\n          dy += 1;\n        }\n        if (!minDelta || dy < minDelta) { minDelta = dy; }\n      }\n    }\n  }\n  return minDelta;\n}\n\n\nexport const deepDup = (arr) => {\n  let duped = new Array(arr.length);\n  for (let i=0; i<duped.length; i++) {\n    duped[i] = new Array(arr[0].length);\n  }\n  for (let row=0; row<arr.length; row++) {\n    for (let col=0; col<arr[0].length; col++) {\n      duped[row][col] = arr[row][col];\n    }\n  }\n  return duped;\n}\n\nexport const randNumRange = (min, max) => {\n  return Math.floor(Math.pow(Math.random(), 2) * (max - min + 1) + min);\n}\n\nexport const randSelect = (a, b) => {\n  return Math.round(Math.random()) === 0 ? a : b;\n}\n"],"sourceRoot":""}